#ifndef _ALTERA_SYS_HPS_H_
#define _ALTERA_SYS_HPS_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'system_bd' in
 * file '../../soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'sys_hps' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'sys_id', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYS_ID_'.
 * The prefix is the slave descriptor.
 */
#define SYS_ID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYS_ID_COMPONENT_NAME sys_id
#define SYS_ID_BASE 0x10000
#define SYS_ID_SPAN 8
#define SYS_ID_END 0x10007
#define SYS_ID_ID 2899645186
#define SYS_ID_TIMESTAMP 1623407749

/*
 * Macros for device 'sys_gpio_bd', class 'altera_avalon_pio'
 * The macros are prefixed with 'SYS_GPIO_BD_'.
 * The prefix is the slave descriptor.
 */
#define SYS_GPIO_BD_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_BD_COMPONENT_NAME sys_gpio_bd
#define SYS_GPIO_BD_BASE 0x20000
#define SYS_GPIO_BD_SPAN 16
#define SYS_GPIO_BD_END 0x2000f
#define SYS_GPIO_BD_IRQ 0
#define SYS_GPIO_BD_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_BD_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_BD_CAPTURE 0
#define SYS_GPIO_BD_DATA_WIDTH 32
#define SYS_GPIO_BD_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_BD_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_BD_EDGE_TYPE NONE
#define SYS_GPIO_BD_FREQ 100000000
#define SYS_GPIO_BD_HAS_IN 1
#define SYS_GPIO_BD_HAS_OUT 1
#define SYS_GPIO_BD_HAS_TRI 0
#define SYS_GPIO_BD_IRQ_TYPE LEVEL
#define SYS_GPIO_BD_RESET_VALUE 0

/*
 * Macros for device 'sys_gpio_in', class 'altera_avalon_pio'
 * The macros are prefixed with 'SYS_GPIO_IN_'.
 * The prefix is the slave descriptor.
 */
#define SYS_GPIO_IN_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_IN_COMPONENT_NAME sys_gpio_in
#define SYS_GPIO_IN_BASE 0x20010
#define SYS_GPIO_IN_SPAN 16
#define SYS_GPIO_IN_END 0x2001f
#define SYS_GPIO_IN_IRQ 1
#define SYS_GPIO_IN_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_IN_CAPTURE 0
#define SYS_GPIO_IN_DATA_WIDTH 32
#define SYS_GPIO_IN_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_IN_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_IN_EDGE_TYPE NONE
#define SYS_GPIO_IN_FREQ 100000000
#define SYS_GPIO_IN_HAS_IN 1
#define SYS_GPIO_IN_HAS_OUT 0
#define SYS_GPIO_IN_HAS_TRI 0
#define SYS_GPIO_IN_IRQ_TYPE LEVEL
#define SYS_GPIO_IN_RESET_VALUE 0

/*
 * Macros for device 'sys_gpio_out', class 'altera_avalon_pio'
 * The macros are prefixed with 'SYS_GPIO_OUT_'.
 * The prefix is the slave descriptor.
 */
#define SYS_GPIO_OUT_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_OUT_COMPONENT_NAME sys_gpio_out
#define SYS_GPIO_OUT_BASE 0x20020
#define SYS_GPIO_OUT_SPAN 16
#define SYS_GPIO_OUT_END 0x2002f
#define SYS_GPIO_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_OUT_CAPTURE 0
#define SYS_GPIO_OUT_DATA_WIDTH 32
#define SYS_GPIO_OUT_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_OUT_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_OUT_EDGE_TYPE NONE
#define SYS_GPIO_OUT_FREQ 100000000
#define SYS_GPIO_OUT_HAS_IN 0
#define SYS_GPIO_OUT_HAS_OUT 1
#define SYS_GPIO_OUT_HAS_TRI 0
#define SYS_GPIO_OUT_IRQ_TYPE NONE
#define SYS_GPIO_OUT_RESET_VALUE 0

/*
 * Macros for device 'ad7768_1_gpio', class 'altera_avalon_pio'
 * The macros are prefixed with 'AD7768_1_GPIO_'.
 * The prefix is the slave descriptor.
 */
#define AD7768_1_GPIO_COMPONENT_TYPE altera_avalon_pio
#define AD7768_1_GPIO_COMPONENT_NAME ad7768_1_gpio
#define AD7768_1_GPIO_BASE 0x20050
#define AD7768_1_GPIO_SPAN 16
#define AD7768_1_GPIO_END 0x2005f
#define AD7768_1_GPIO_BIT_CLEARING_EDGE_REGISTER 0
#define AD7768_1_GPIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AD7768_1_GPIO_CAPTURE 0
#define AD7768_1_GPIO_DATA_WIDTH 32
#define AD7768_1_GPIO_DO_TEST_BENCH_WIRING 0
#define AD7768_1_GPIO_DRIVEN_SIM_VALUE 0
#define AD7768_1_GPIO_EDGE_TYPE NONE
#define AD7768_1_GPIO_FREQ 100000000
#define AD7768_1_GPIO_HAS_IN 0
#define AD7768_1_GPIO_HAS_OUT 0
#define AD7768_1_GPIO_HAS_TRI 1
#define AD7768_1_GPIO_IRQ_TYPE NONE
#define AD7768_1_GPIO_RESET_VALUE 0

/*
 * Macros for device 'axi_spi_engine_0', class 'axi_spi_engine_v1_0'
 * The macros are prefixed with 'AXI_SPI_ENGINE_0_'.
 * The prefix is the slave descriptor.
 */
#define AXI_SPI_ENGINE_0_COMPONENT_TYPE axi_spi_engine_v1_0
#define AXI_SPI_ENGINE_0_COMPONENT_NAME axi_spi_engine_0
#define AXI_SPI_ENGINE_0_BASE 0x40000
#define AXI_SPI_ENGINE_0_SPAN 65536
#define AXI_SPI_ENGINE_0_END 0x4ffff
#define AXI_SPI_ENGINE_0_IRQ 6

/*
 * Macros for device 'spi_dmac_0', class 'axi_dmac'
 * The macros are prefixed with 'SPI_DMAC_0_'.
 * The prefix is the slave descriptor.
 */
#define SPI_DMAC_0_COMPONENT_TYPE axi_dmac
#define SPI_DMAC_0_COMPONENT_NAME spi_dmac_0
#define SPI_DMAC_0_BASE 0x50000
#define SPI_DMAC_0_SPAN 2048
#define SPI_DMAC_0_END 0x507ff
#define SPI_DMAC_0_IRQ 5

/*
 * Macros for device 'hdmi_dmac_0', class 'axi_dmac'
 * The macros are prefixed with 'HDMI_DMAC_0_'.
 * The prefix is the slave descriptor.
 */
#define HDMI_DMAC_0_COMPONENT_TYPE axi_dmac
#define HDMI_DMAC_0_COMPONENT_NAME hdmi_dmac_0
#define HDMI_DMAC_0_BASE 0x90000
#define HDMI_DMAC_0_SPAN 2048
#define HDMI_DMAC_0_END 0x907ff
#define HDMI_DMAC_0_IRQ 4

/*
 * Macros for device 'axi_hdmi_tx_0', class 'axi_hdmi_tx'
 * The macros are prefixed with 'AXI_HDMI_TX_0_'.
 * The prefix is the slave descriptor.
 */
#define AXI_HDMI_TX_0_COMPONENT_TYPE axi_hdmi_tx
#define AXI_HDMI_TX_0_COMPONENT_NAME axi_hdmi_tx_0
#define AXI_HDMI_TX_0_BASE 0xa0000
#define AXI_HDMI_TX_0_SPAN 65536
#define AXI_HDMI_TX_0_END 0xaffff


#endif /* _ALTERA_SYS_HPS_H_ */
