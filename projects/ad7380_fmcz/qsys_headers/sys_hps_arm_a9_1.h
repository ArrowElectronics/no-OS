#ifndef _ALTERA_SYS_HPS_ARM_A9_1_H_
#define _ALTERA_SYS_HPS_ARM_A9_1_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'system_bd' in
 * file '../../soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'sys_hps_arm_a9_1' and devices
 * connected to the following master:
 *   altera_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'sys_hps_axi_sdram', class 'axi_sdram'
 * The macros are prefixed with 'SYS_HPS_AXI_SDRAM_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define SYS_HPS_AXI_SDRAM_COMPONENT_NAME sys_hps_axi_sdram
#define SYS_HPS_AXI_SDRAM_BASE 0x0
#define SYS_HPS_AXI_SDRAM_SPAN 0x80000000
#define SYS_HPS_AXI_SDRAM_END 0x7fffffff
#define SYS_HPS_AXI_SDRAM_SIZE_MULTIPLE 1
#define SYS_HPS_AXI_SDRAM_SIZE_VALUE 1<<31
#define SYS_HPS_AXI_SDRAM_WRITABLE 1
#define SYS_HPS_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define SYS_HPS_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define SYS_HPS_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'sys_id', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYS_ID_'.
 * The prefix is the slave descriptor.
 */
#define SYS_ID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYS_ID_COMPONENT_NAME sys_id
#define SYS_ID_BASE 0xff210000
#define SYS_ID_SPAN 8
#define SYS_ID_END 0xff210007
#define SYS_ID_ID 2899645186
#define SYS_ID_TIMESTAMP 1623407749

/*
 * Macros for device 'sys_gpio_bd', class 'altera_avalon_pio'
 * The macros are prefixed with 'SYS_GPIO_BD_'.
 * The prefix is the slave descriptor.
 */
#define SYS_GPIO_BD_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_BD_COMPONENT_NAME sys_gpio_bd
#define SYS_GPIO_BD_BASE 0xff220000
#define SYS_GPIO_BD_SPAN 16
#define SYS_GPIO_BD_END 0xff22000f
#define SYS_GPIO_BD_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_BD_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_BD_CAPTURE 0
#define SYS_GPIO_BD_DATA_WIDTH 32
#define SYS_GPIO_BD_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_BD_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_BD_EDGE_TYPE NONE
#define SYS_GPIO_BD_FREQ 100000000
#define SYS_GPIO_BD_HAS_IN 1
#define SYS_GPIO_BD_HAS_OUT 1
#define SYS_GPIO_BD_HAS_TRI 0
#define SYS_GPIO_BD_IRQ_TYPE LEVEL
#define SYS_GPIO_BD_RESET_VALUE 0

/*
 * Macros for device 'sys_gpio_in', class 'altera_avalon_pio'
 * The macros are prefixed with 'SYS_GPIO_IN_'.
 * The prefix is the slave descriptor.
 */
#define SYS_GPIO_IN_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_IN_COMPONENT_NAME sys_gpio_in
#define SYS_GPIO_IN_BASE 0xff220010
#define SYS_GPIO_IN_SPAN 16
#define SYS_GPIO_IN_END 0xff22001f
#define SYS_GPIO_IN_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_IN_CAPTURE 0
#define SYS_GPIO_IN_DATA_WIDTH 32
#define SYS_GPIO_IN_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_IN_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_IN_EDGE_TYPE NONE
#define SYS_GPIO_IN_FREQ 100000000
#define SYS_GPIO_IN_HAS_IN 1
#define SYS_GPIO_IN_HAS_OUT 0
#define SYS_GPIO_IN_HAS_TRI 0
#define SYS_GPIO_IN_IRQ_TYPE LEVEL
#define SYS_GPIO_IN_RESET_VALUE 0

/*
 * Macros for device 'sys_gpio_out', class 'altera_avalon_pio'
 * The macros are prefixed with 'SYS_GPIO_OUT_'.
 * The prefix is the slave descriptor.
 */
#define SYS_GPIO_OUT_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_OUT_COMPONENT_NAME sys_gpio_out
#define SYS_GPIO_OUT_BASE 0xff220020
#define SYS_GPIO_OUT_SPAN 16
#define SYS_GPIO_OUT_END 0xff22002f
#define SYS_GPIO_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_OUT_CAPTURE 0
#define SYS_GPIO_OUT_DATA_WIDTH 32
#define SYS_GPIO_OUT_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_OUT_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_OUT_EDGE_TYPE NONE
#define SYS_GPIO_OUT_FREQ 100000000
#define SYS_GPIO_OUT_HAS_IN 0
#define SYS_GPIO_OUT_HAS_OUT 1
#define SYS_GPIO_OUT_HAS_TRI 0
#define SYS_GPIO_OUT_IRQ_TYPE NONE
#define SYS_GPIO_OUT_RESET_VALUE 0

/*
 * Macros for device 'ad7768_1_gpio', class 'altera_avalon_pio'
 * The macros are prefixed with 'AD7768_1_GPIO_'.
 * The prefix is the slave descriptor.
 */
#define AD7768_1_GPIO_COMPONENT_TYPE altera_avalon_pio
#define AD7768_1_GPIO_COMPONENT_NAME ad7768_1_gpio
#define AD7768_1_GPIO_BASE 0xff220050
#define AD7768_1_GPIO_SPAN 16
#define AD7768_1_GPIO_END 0xff22005f
#define AD7768_1_GPIO_BIT_CLEARING_EDGE_REGISTER 0
#define AD7768_1_GPIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AD7768_1_GPIO_CAPTURE 0
#define AD7768_1_GPIO_DATA_WIDTH 32
#define AD7768_1_GPIO_DO_TEST_BENCH_WIRING 0
#define AD7768_1_GPIO_DRIVEN_SIM_VALUE 0
#define AD7768_1_GPIO_EDGE_TYPE NONE
#define AD7768_1_GPIO_FREQ 100000000
#define AD7768_1_GPIO_HAS_IN 0
#define AD7768_1_GPIO_HAS_OUT 0
#define AD7768_1_GPIO_HAS_TRI 1
#define AD7768_1_GPIO_IRQ_TYPE NONE
#define AD7768_1_GPIO_RESET_VALUE 0

/*
 * Macros for device 'axi_spi_engine_0', class 'axi_spi_engine_v1_0'
 * The macros are prefixed with 'AXI_SPI_ENGINE_0_'.
 * The prefix is the slave descriptor.
 */
#define AXI_SPI_ENGINE_0_COMPONENT_TYPE axi_spi_engine_v1_0
#define AXI_SPI_ENGINE_0_COMPONENT_NAME axi_spi_engine_0
#define AXI_SPI_ENGINE_0_BASE 0xff240000
#define AXI_SPI_ENGINE_0_SPAN 65536
#define AXI_SPI_ENGINE_0_END 0xff24ffff

/*
 * Macros for device 'spi_dmac_0', class 'axi_dmac'
 * The macros are prefixed with 'SPI_DMAC_0_'.
 * The prefix is the slave descriptor.
 */
#define SPI_DMAC_0_COMPONENT_TYPE axi_dmac
#define SPI_DMAC_0_COMPONENT_NAME spi_dmac_0
#define SPI_DMAC_0_BASE 0xff250000
#define SPI_DMAC_0_SPAN 2048
#define SPI_DMAC_0_END 0xff2507ff

/*
 * Macros for device 'hdmi_dmac_0', class 'axi_dmac'
 * The macros are prefixed with 'HDMI_DMAC_0_'.
 * The prefix is the slave descriptor.
 */
#define HDMI_DMAC_0_COMPONENT_TYPE axi_dmac
#define HDMI_DMAC_0_COMPONENT_NAME hdmi_dmac_0
#define HDMI_DMAC_0_BASE 0xff290000
#define HDMI_DMAC_0_SPAN 2048
#define HDMI_DMAC_0_END 0xff2907ff

/*
 * Macros for device 'axi_hdmi_tx_0', class 'axi_hdmi_tx'
 * The macros are prefixed with 'AXI_HDMI_TX_0_'.
 * The prefix is the slave descriptor.
 */
#define AXI_HDMI_TX_0_COMPONENT_TYPE axi_hdmi_tx
#define AXI_HDMI_TX_0_COMPONENT_NAME axi_hdmi_tx_0
#define AXI_HDMI_TX_0_BASE 0xff2a0000
#define AXI_HDMI_TX_0_SPAN 65536
#define AXI_HDMI_TX_0_END 0xff2affff

/*
 * Macros for device 'sys_hps_gmac0', class 'stmmac'
 * The macros are prefixed with 'SYS_HPS_GMAC0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_GMAC0_COMPONENT_TYPE stmmac
#define SYS_HPS_GMAC0_COMPONENT_NAME sys_hps_gmac0
#define SYS_HPS_GMAC0_BASE 0xff700000
#define SYS_HPS_GMAC0_SPAN 8192
#define SYS_HPS_GMAC0_END 0xff701fff

/*
 * Macros for device 'sys_hps_gmac1', class 'stmmac'
 * The macros are prefixed with 'SYS_HPS_GMAC1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_GMAC1_COMPONENT_TYPE stmmac
#define SYS_HPS_GMAC1_COMPONENT_NAME sys_hps_gmac1
#define SYS_HPS_GMAC1_BASE 0xff702000
#define SYS_HPS_GMAC1_SPAN 8192
#define SYS_HPS_GMAC1_END 0xff703fff

/*
 * Macros for device 'sys_hps_sdmmc', class 'sdmmc'
 * The macros are prefixed with 'SYS_HPS_SDMMC_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_SDMMC_COMPONENT_TYPE sdmmc
#define SYS_HPS_SDMMC_COMPONENT_NAME sys_hps_sdmmc
#define SYS_HPS_SDMMC_BASE 0xff704000
#define SYS_HPS_SDMMC_SPAN 4096
#define SYS_HPS_SDMMC_END 0xff704fff

/*
 * Macros for device 'sys_hps_qspi', class 'cadence_qspi'
 * The macros are prefixed with 'SYS_HPS_QSPI_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_QSPI_COMPONENT_TYPE cadence_qspi
#define SYS_HPS_QSPI_COMPONENT_NAME sys_hps_qspi
#define SYS_HPS_QSPI_BASE 0xff705000
#define SYS_HPS_QSPI_SPAN 256
#define SYS_HPS_QSPI_END 0xff7050ff

/*
 * Macros for device 'sys_hps_fpgamgr', class 'altera_fpgamgr'
 * The macros are prefixed with 'SYS_HPS_FPGAMGR_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define SYS_HPS_FPGAMGR_COMPONENT_NAME sys_hps_fpgamgr
#define SYS_HPS_FPGAMGR_BASE 0xff706000
#define SYS_HPS_FPGAMGR_SPAN 4096
#define SYS_HPS_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'sys_hps_gpio0', class 'dw_gpio'
 * The macros are prefixed with 'SYS_HPS_GPIO0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_GPIO0_COMPONENT_TYPE dw_gpio
#define SYS_HPS_GPIO0_COMPONENT_NAME sys_hps_gpio0
#define SYS_HPS_GPIO0_BASE 0xff708000
#define SYS_HPS_GPIO0_SPAN 256
#define SYS_HPS_GPIO0_END 0xff7080ff

/*
 * Macros for device 'sys_hps_gpio1', class 'dw_gpio'
 * The macros are prefixed with 'SYS_HPS_GPIO1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_GPIO1_COMPONENT_TYPE dw_gpio
#define SYS_HPS_GPIO1_COMPONENT_NAME sys_hps_gpio1
#define SYS_HPS_GPIO1_BASE 0xff709000
#define SYS_HPS_GPIO1_SPAN 256
#define SYS_HPS_GPIO1_END 0xff7090ff

/*
 * Macros for device 'sys_hps_gpio2', class 'dw_gpio'
 * The macros are prefixed with 'SYS_HPS_GPIO2_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_GPIO2_COMPONENT_TYPE dw_gpio
#define SYS_HPS_GPIO2_COMPONENT_NAME sys_hps_gpio2
#define SYS_HPS_GPIO2_BASE 0xff70a000
#define SYS_HPS_GPIO2_SPAN 256
#define SYS_HPS_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'sys_hps_l3regs', class 'altera_l3regs'
 * The macros are prefixed with 'SYS_HPS_L3REGS_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_L3REGS_COMPONENT_TYPE altera_l3regs
#define SYS_HPS_L3REGS_COMPONENT_NAME sys_hps_l3regs
#define SYS_HPS_L3REGS_BASE 0xff800000
#define SYS_HPS_L3REGS_SPAN 4096
#define SYS_HPS_L3REGS_END 0xff800fff

/*
 * Macros for device 'sys_hps_nand0', class 'denali_nand'
 * The macros are prefixed with 'SYS_HPS_NAND0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_NAND0_COMPONENT_TYPE denali_nand
#define SYS_HPS_NAND0_COMPONENT_NAME sys_hps_nand0
#define SYS_HPS_NAND0_BASE 0xff900000
#define SYS_HPS_NAND0_SPAN 65536
#define SYS_HPS_NAND0_END 0xff90ffff

/*
 * Macros for device 'sys_hps_usb0', class 'usb'
 * The macros are prefixed with 'SYS_HPS_USB0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_USB0_COMPONENT_TYPE usb
#define SYS_HPS_USB0_COMPONENT_NAME sys_hps_usb0
#define SYS_HPS_USB0_BASE 0xffb00000
#define SYS_HPS_USB0_SPAN 262144
#define SYS_HPS_USB0_END 0xffb3ffff

/*
 * Macros for device 'sys_hps_usb1', class 'usb'
 * The macros are prefixed with 'SYS_HPS_USB1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_USB1_COMPONENT_TYPE usb
#define SYS_HPS_USB1_COMPONENT_NAME sys_hps_usb1
#define SYS_HPS_USB1_BASE 0xffb40000
#define SYS_HPS_USB1_SPAN 262144
#define SYS_HPS_USB1_END 0xffb7ffff

/*
 * Macros for device 'sys_hps_dcan0', class 'bosch_dcan'
 * The macros are prefixed with 'SYS_HPS_DCAN0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_DCAN0_COMPONENT_TYPE bosch_dcan
#define SYS_HPS_DCAN0_COMPONENT_NAME sys_hps_dcan0
#define SYS_HPS_DCAN0_BASE 0xffc00000
#define SYS_HPS_DCAN0_SPAN 4096
#define SYS_HPS_DCAN0_END 0xffc00fff

/*
 * Macros for device 'sys_hps_dcan1', class 'bosch_dcan'
 * The macros are prefixed with 'SYS_HPS_DCAN1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_DCAN1_COMPONENT_TYPE bosch_dcan
#define SYS_HPS_DCAN1_COMPONENT_NAME sys_hps_dcan1
#define SYS_HPS_DCAN1_BASE 0xffc01000
#define SYS_HPS_DCAN1_SPAN 4096
#define SYS_HPS_DCAN1_END 0xffc01fff

/*
 * Macros for device 'sys_hps_uart0', class 'snps_uart'
 * The macros are prefixed with 'SYS_HPS_UART0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_UART0_COMPONENT_TYPE snps_uart
#define SYS_HPS_UART0_COMPONENT_NAME sys_hps_uart0
#define SYS_HPS_UART0_BASE 0xffc02000
#define SYS_HPS_UART0_SPAN 256
#define SYS_HPS_UART0_END 0xffc020ff
#define SYS_HPS_UART0_FIFO_DEPTH 128
#define SYS_HPS_UART0_FIFO_HWFC 0
#define SYS_HPS_UART0_FIFO_MODE 1
#define SYS_HPS_UART0_FIFO_SWFC 0
#define SYS_HPS_UART0_FREQ 100000000

/*
 * Macros for device 'sys_hps_uart1', class 'snps_uart'
 * The macros are prefixed with 'SYS_HPS_UART1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_UART1_COMPONENT_TYPE snps_uart
#define SYS_HPS_UART1_COMPONENT_NAME sys_hps_uart1
#define SYS_HPS_UART1_BASE 0xffc03000
#define SYS_HPS_UART1_SPAN 256
#define SYS_HPS_UART1_END 0xffc030ff
#define SYS_HPS_UART1_FIFO_DEPTH 128
#define SYS_HPS_UART1_FIFO_HWFC 0
#define SYS_HPS_UART1_FIFO_MODE 1
#define SYS_HPS_UART1_FIFO_SWFC 0
#define SYS_HPS_UART1_FREQ 100000000

/*
 * Macros for device 'sys_hps_i2c0', class 'designware_i2c'
 * The macros are prefixed with 'SYS_HPS_I2C0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_I2C0_COMPONENT_TYPE designware_i2c
#define SYS_HPS_I2C0_COMPONENT_NAME sys_hps_i2c0
#define SYS_HPS_I2C0_BASE 0xffc04000
#define SYS_HPS_I2C0_SPAN 256
#define SYS_HPS_I2C0_END 0xffc040ff

/*
 * Macros for device 'sys_hps_i2c1', class 'designware_i2c'
 * The macros are prefixed with 'SYS_HPS_I2C1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_I2C1_COMPONENT_TYPE designware_i2c
#define SYS_HPS_I2C1_COMPONENT_NAME sys_hps_i2c1
#define SYS_HPS_I2C1_BASE 0xffc05000
#define SYS_HPS_I2C1_SPAN 256
#define SYS_HPS_I2C1_END 0xffc050ff

/*
 * Macros for device 'sys_hps_i2c2', class 'designware_i2c'
 * The macros are prefixed with 'SYS_HPS_I2C2_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_I2C2_COMPONENT_TYPE designware_i2c
#define SYS_HPS_I2C2_COMPONENT_NAME sys_hps_i2c2
#define SYS_HPS_I2C2_BASE 0xffc06000
#define SYS_HPS_I2C2_SPAN 256
#define SYS_HPS_I2C2_END 0xffc060ff

/*
 * Macros for device 'sys_hps_i2c3', class 'designware_i2c'
 * The macros are prefixed with 'SYS_HPS_I2C3_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_I2C3_COMPONENT_TYPE designware_i2c
#define SYS_HPS_I2C3_COMPONENT_NAME sys_hps_i2c3
#define SYS_HPS_I2C3_BASE 0xffc07000
#define SYS_HPS_I2C3_SPAN 256
#define SYS_HPS_I2C3_END 0xffc070ff

/*
 * Macros for device 'sys_hps_timer0', class 'dw_apb_timer_sp'
 * The macros are prefixed with 'SYS_HPS_TIMER0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define SYS_HPS_TIMER0_COMPONENT_NAME sys_hps_timer0
#define SYS_HPS_TIMER0_BASE 0xffc08000
#define SYS_HPS_TIMER0_SPAN 256
#define SYS_HPS_TIMER0_END 0xffc080ff

/*
 * Macros for device 'sys_hps_timer1', class 'dw_apb_timer_sp'
 * The macros are prefixed with 'SYS_HPS_TIMER1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define SYS_HPS_TIMER1_COMPONENT_NAME sys_hps_timer1
#define SYS_HPS_TIMER1_BASE 0xffc09000
#define SYS_HPS_TIMER1_SPAN 256
#define SYS_HPS_TIMER1_END 0xffc090ff

/*
 * Macros for device 'sys_hps_sdrctl', class 'altera_sdrctl'
 * The macros are prefixed with 'SYS_HPS_SDRCTL_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define SYS_HPS_SDRCTL_COMPONENT_NAME sys_hps_sdrctl
#define SYS_HPS_SDRCTL_BASE 0xffc25000
#define SYS_HPS_SDRCTL_SPAN 4096
#define SYS_HPS_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'sys_hps_timer2', class 'dw_apb_timer_osc'
 * The macros are prefixed with 'SYS_HPS_TIMER2_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define SYS_HPS_TIMER2_COMPONENT_NAME sys_hps_timer2
#define SYS_HPS_TIMER2_BASE 0xffd00000
#define SYS_HPS_TIMER2_SPAN 256
#define SYS_HPS_TIMER2_END 0xffd000ff

/*
 * Macros for device 'sys_hps_timer3', class 'dw_apb_timer_osc'
 * The macros are prefixed with 'SYS_HPS_TIMER3_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define SYS_HPS_TIMER3_COMPONENT_NAME sys_hps_timer3
#define SYS_HPS_TIMER3_BASE 0xffd01000
#define SYS_HPS_TIMER3_SPAN 256
#define SYS_HPS_TIMER3_END 0xffd010ff

/*
 * Macros for device 'sys_hps_wd_timer0', class 'dw_wd_timer'
 * The macros are prefixed with 'SYS_HPS_WD_TIMER0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define SYS_HPS_WD_TIMER0_COMPONENT_NAME sys_hps_wd_timer0
#define SYS_HPS_WD_TIMER0_BASE 0xffd02000
#define SYS_HPS_WD_TIMER0_SPAN 256
#define SYS_HPS_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'sys_hps_wd_timer1', class 'dw_wd_timer'
 * The macros are prefixed with 'SYS_HPS_WD_TIMER1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define SYS_HPS_WD_TIMER1_COMPONENT_NAME sys_hps_wd_timer1
#define SYS_HPS_WD_TIMER1_BASE 0xffd03000
#define SYS_HPS_WD_TIMER1_SPAN 256
#define SYS_HPS_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'sys_hps_clkmgr', class 'asimov_clkmgr'
 * The macros are prefixed with 'SYS_HPS_CLKMGR_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define SYS_HPS_CLKMGR_COMPONENT_NAME sys_hps_clkmgr
#define SYS_HPS_CLKMGR_BASE 0xffd04000
#define SYS_HPS_CLKMGR_SPAN 4096
#define SYS_HPS_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'sys_hps_rstmgr', class 'altera_rstmgr'
 * The macros are prefixed with 'SYS_HPS_RSTMGR_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define SYS_HPS_RSTMGR_COMPONENT_NAME sys_hps_rstmgr
#define SYS_HPS_RSTMGR_BASE 0xffd05000
#define SYS_HPS_RSTMGR_SPAN 256
#define SYS_HPS_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'sys_hps_sysmgr', class 'altera_sysmgr'
 * The macros are prefixed with 'SYS_HPS_SYSMGR_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define SYS_HPS_SYSMGR_COMPONENT_NAME sys_hps_sysmgr
#define SYS_HPS_SYSMGR_BASE 0xffd08000
#define SYS_HPS_SYSMGR_SPAN 1024
#define SYS_HPS_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'sys_hps_dma', class 'arm_pl330_dma'
 * The macros are prefixed with 'SYS_HPS_DMA_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_DMA_COMPONENT_TYPE arm_pl330_dma
#define SYS_HPS_DMA_COMPONENT_NAME sys_hps_dma
#define SYS_HPS_DMA_BASE 0xffe01000
#define SYS_HPS_DMA_SPAN 4096
#define SYS_HPS_DMA_END 0xffe01fff

/*
 * Macros for device 'sys_hps_spim0', class 'spi'
 * The macros are prefixed with 'SYS_HPS_SPIM0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_SPIM0_COMPONENT_TYPE spi
#define SYS_HPS_SPIM0_COMPONENT_NAME sys_hps_spim0
#define SYS_HPS_SPIM0_BASE 0xfff00000
#define SYS_HPS_SPIM0_SPAN 256
#define SYS_HPS_SPIM0_END 0xfff000ff

/*
 * Macros for device 'sys_hps_spim1', class 'spi'
 * The macros are prefixed with 'SYS_HPS_SPIM1_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_SPIM1_COMPONENT_TYPE spi
#define SYS_HPS_SPIM1_COMPONENT_NAME sys_hps_spim1
#define SYS_HPS_SPIM1_BASE 0xfff01000
#define SYS_HPS_SPIM1_SPAN 256
#define SYS_HPS_SPIM1_END 0xfff010ff

/*
 * Macros for device 'sys_hps_scu', class 'scu'
 * The macros are prefixed with 'SYS_HPS_SCU_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_SCU_COMPONENT_TYPE scu
#define SYS_HPS_SCU_COMPONENT_NAME sys_hps_scu
#define SYS_HPS_SCU_BASE 0xfffec000
#define SYS_HPS_SCU_SPAN 256
#define SYS_HPS_SCU_END 0xfffec0ff

/*
 * Macros for device 'sys_hps_timer', class 'arm_internal_timer'
 * The macros are prefixed with 'SYS_HPS_TIMER_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_TIMER_COMPONENT_TYPE arm_internal_timer
#define SYS_HPS_TIMER_COMPONENT_NAME sys_hps_timer
#define SYS_HPS_TIMER_BASE 0xfffec600
#define SYS_HPS_TIMER_SPAN 256
#define SYS_HPS_TIMER_END 0xfffec6ff

/*
 * Macros for device 'sys_hps_arm_gic_0', class 'arm_gic'
 * The macros are prefixed with 'SYS_HPS_ARM_GIC_0_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define SYS_HPS_ARM_GIC_0_COMPONENT_NAME sys_hps_arm_gic_0
#define SYS_HPS_ARM_GIC_0_BASE 0xfffed000
#define SYS_HPS_ARM_GIC_0_SPAN 4096
#define SYS_HPS_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'sys_hps_L2', class 'arm_pl310_L2'
 * The macros are prefixed with 'SYS_HPS_L2_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_L2_COMPONENT_TYPE arm_pl310_L2
#define SYS_HPS_L2_COMPONENT_NAME sys_hps_L2
#define SYS_HPS_L2_BASE 0xfffef000
#define SYS_HPS_L2_SPAN 4096
#define SYS_HPS_L2_END 0xfffeffff

/*
 * Macros for device 'sys_hps_axi_ocram', class 'axi_ocram'
 * The macros are prefixed with 'SYS_HPS_AXI_OCRAM_'.
 * The prefix is the slave descriptor.
 */
#define SYS_HPS_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define SYS_HPS_AXI_OCRAM_COMPONENT_NAME sys_hps_axi_ocram
#define SYS_HPS_AXI_OCRAM_BASE 0xffff0000
#define SYS_HPS_AXI_OCRAM_SPAN 65536
#define SYS_HPS_AXI_OCRAM_END 0xffffffff
#define SYS_HPS_AXI_OCRAM_SIZE_MULTIPLE 1
#define SYS_HPS_AXI_OCRAM_SIZE_VALUE 1<<16
#define SYS_HPS_AXI_OCRAM_WRITABLE 1
#define SYS_HPS_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define SYS_HPS_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define SYS_HPS_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16


#endif /* _ALTERA_SYS_HPS_ARM_A9_1_H_ */
